{"mappings":"AAAA,aAIA,MAAMA,gBAAkB,qDAClBC,kBAAoB,uCAIpBC,KAAOC,SAASC,cAAc,SAC9BC,WAAaF,SAASC,cAAc,gBACpCE,aAAeH,SAASC,cAAc,oBACtCG,KAAOJ,SAASC,cAAc,QAepCI,aAAA,SAAAC,GAME,MADa,8CACKC,KAAGD,EACvB,EAQAE,YAAA,SAAAC,GAEAN,aAAAO,YAAAD,EAKEV,KAAAY,QAAMC,OAAU,C,EAWdC,WAAc,W,aACRH,YAAiB,GACzBX,KAACY,QAAAC,OAAA,CACH,EAKEE,cAAA,WAQA,IAACV,KAAAH,cAAA,aAEDG,KAAAW,mBAAA,YATM,6IAWJ,MAAAC,EAAYhB,SAAAC,cAAA,wBACZe,EAAAC,iBAAA,aAAAD,EAAAE,QAAA,YAAAC,UACF,C,OAMAF,iBAAc,mBAAAG,GAEhBA,EAAAC,iB,yEA7BUX,YAAiB,GACzBX,KAACY,QAAAC,OAAA,E","sources":["src/js/main.js"],"sourcesContent":["'use strict';\r\n\r\n/////////////////////\r\n// GLOBAL DEFINITIONS\r\nconst MSG_ERROR_EMPTY = 'Whoops! It looks like you forgot to add your email';\r\nconst MSG_ERROR_INVALID = 'Please provide a valid email address';\r\n\r\n/////////////////////\r\n// SELECTING DOM ELEMENTS\r\nconst form = document.querySelector('.form');\r\nconst emailInput = document.querySelector('.form__input');\r\nconst errorMessage = document.querySelector('.form__error-msg');\r\nconst body = document.querySelector('body');\r\n\r\n/////////////////////\r\n// FUNCTIONS\r\n\r\n/**\r\n * Function to validate an email using regular expression\r\n * @param {String} email - string of the email to be validated\r\n * @returns {Boolean} true || false\r\n */\r\nconst isValidEmail = function (email) {\r\n  const emailRegex = /^[a-z0-9._]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\r\n  return emailRegex.test(email);\r\n};\r\n\r\n/**\r\n * Function that renders the error message on the screen\r\n * @param {String} msg - error message\r\n */\r\nconst renderError = function (msg) {\r\n  errorMessage.textContent = msg;\r\n  form.dataset.valid = false;\r\n};\r\n\r\n/**\r\n * Function that clears the error message from the screen\r\n */\r\nconst clearError = function () {\r\n  errorMessage.textContent = '';\r\n  form.dataset.valid = true;\r\n};\r\n\r\n/**\r\n * Function that renders the thanks message on the screen and\r\n * add an event to close it\r\n */\r\nconst renderMessage = function () {\r\n  const markup = `\r\n    <div class=\"message\">\r\n      <p>Thank you for subscribing!</p>\r\n      <button class=\"btn btn--close\">Close</button>\r\n    </div>\r\n  `;\r\n\r\n  if (!body.querySelector('.message')) {\r\n    body.insertAdjacentHTML('beforeend', markup);\r\n\r\n    // Add event handle to close message\r\n    const close = document.querySelector('.message .btn--close');\r\n    close.addEventListener('click', () => close.closest('.message').remove());\r\n  }\r\n};\r\n\r\n/////////////////////\r\n// EVENTS HANDLER\r\nform.addEventListener('submit', function (event) {\r\n  // To not reload the page on submit the form\r\n  event.preventDefault();\r\n  const email = emailInput.value;\r\n\r\n  // Check if the input is not empty\r\n  if (!email) {\r\n    renderError(MSG_ERROR_EMPTY);\r\n    return;\r\n  }\r\n\r\n  // Check if the email is valid\r\n  if (!isValidEmail(email)) {\r\n    renderError(MSG_ERROR_INVALID);\r\n    return;\r\n  }\r\n\r\n  // Shows thanks message (form submited)\r\n  renderMessage();\r\n  clearError();\r\n\r\n  // Clear input\r\n  emailInput.value = '';\r\n});\r\n"],"names":["MSG_ERROR_EMPTY","MSG_ERROR_INVALID","form","document","querySelector","emailInput","errorMessage","body","isValidEmail","email","test","renderError","msg","textContent","dataset","valid","clearError","renderMessage","insertAdjacentHTML","close","addEventListener","closest","remove","event","preventDefault"],"version":3,"file":"index.2a761df4.js.map"}